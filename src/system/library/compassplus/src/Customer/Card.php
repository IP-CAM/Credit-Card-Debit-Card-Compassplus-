<?php
 namespace Compassplus\Sdk\Customer; use InvalidArgumentException; use LengthException; use UnexpectedValueException; use function is_numeric; use function strlen; class Card { private $pan; private $expireMonth; private $expyear; private $brand; private $cardUID; public function __construct() { } public function getPan() { return $this->pan; } public function setPan($pan) { $this->pan = $pan; } public function getBrand() { return $this->brand; } public function setBrand($brand) { $this->brand = $brand; } public function getCardUID() { return $this->cardUID; } public function setCardUID($cardUID) { $this->cardUID = $cardUID; } public function getExpDate() { return $this->expyear . $this->expireMonth; } public function getExpireMonth() { return $this->expireMonth; } public function setExpireMonth($expireMonth) { if (!is_numeric($expireMonth)) { throw new InvalidArgumentException('Invalid month'); } if ($expireMonth > 12 or $expireMonth == 0) { throw new UnexpectedValueException('Invalid month'); } $this->expireMonth = $expireMonth; } public function setExpireYear($expireYear) { if (!is_numeric($expireYear)) { throw new InvalidArgumentException('Invalid card expiration year'); } if ($expireYear < date("Y") or $expireYear > (date("Y") + 10)) { throw new UnexpectedValueException('Invalid card expiration year'); } $this->expyear = $expireYear; } public function getExpireYear() { return $this->expyear; } public function validatePan($pan) { if (strlen($pan) < 16 or strlen($pan) > 19) { throw new LengthException('Invalid pan length'); } if (!is_numeric($pan)) { throw new InvalidArgumentException('Invalid type'); } return true; } } 