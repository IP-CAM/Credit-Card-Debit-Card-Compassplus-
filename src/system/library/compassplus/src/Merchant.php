<?php
 namespace Compassplus\Sdk; use InvalidArgumentException; use Respect\Validation\Validator as v; class Merchant { private $language; private $merchantId; private $approveUrl; private $cancelUrl; private $declineUrl; public function __construct() { } public function getApproveUrl() { return $this->approveUrl; } public function setApproveUrl($approveUrl) { $this->approveUrl = $approveUrl; } public function getCancelUrl() { return $this->cancelUrl; } public function setCancelUrl($cancelUrl) { $this->cancelUrl = $cancelUrl; } public function getDeclineUrl() { return $this->declineUrl; } public function setDeclineUrl($declineUrl) { $this->declineUrl = $declineUrl; } public function getLanguage() { return $this->language; } public function setLanguage($language) { if (!empty($language)) { $language = strtolower($language); if (!v::languageCode('alpha-2')->validate($language)) { throw new InvalidArgumentException('Language not in ISO 639-1 format'); } } $this->language = $language; } public function validateURL($url) { if (!v::url()->validate($url)) { throw new InvalidArgumentException('Invalid url'); } return true; } public function getId() { return $this->merchantId; } public function setMerchantId($merchantId) { $this->merchantId = $merchantId; } } 